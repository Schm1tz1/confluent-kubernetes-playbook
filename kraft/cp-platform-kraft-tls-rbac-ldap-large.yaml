apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kcontroller
  namespace: confluent
spec:
  replicas: 3
  license:
    globalLicense: true
  image:
    application: confluentinc/cp-server:7.4.1
    init: confluentinc/confluent-init-container:2.6.0
  listeners:
    controller:
      tls:
        enabled: true
      authentication:
        type: plain
        jaasConfig:
          secretRef: kraft-credentials
  configOverrides:
    server:
      - default.replication.factor=3
      - min.insync.replicas=2
  dataVolumeCapacity: 20Gi
  podTemplate:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  tls:
    secretRef: kraft-zk-tls
    #secretRef: tls-group
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3
  license:
    globalLicense: true
  image:
    application: confluentinc/cp-server:7.4.1
    init: confluentinc/confluent-init-container:2.6.0
  tls:
    secretRef: kafka-tls
    #secretRef: tls-group
  listeners:
    internal:
      authentication:
        type: ldap
        jaasConfig:
          secretRef: kafka-ldap-credentials
      tls:
        enabled: true
    external:
      authentication:
        type: ldap
      tls:
        enabled: true
      externalAccess:
        type: staticForHostBasedRouting
        staticForHostBasedRouting:
          domain: ncapelle-playground.confluent.io
          port: 443
  authorization:
    type: rbac
    superUsers:
      - User:kafka

  #configOverrides:
  #  server:
  #  - ldap.search.mode=USERS
  #configOverrides:
  #  server:
  #    - "confluent.license.topic.replication.factor=1"
  #    - "confluent.metrics.reporter.topic.replicas=1"
  #    - "confluent.tier.metadata.replication.factor=1"
  #    - "confluent.metadata.topic.replication.factor=1"
  #    - "confluent.balancer.topic.replication.factor=1"
  #    - "confluent.security.event.logger.exporter.kafka.topic.replicas=1"
  #    - "event.logger.exporter.kafka.topic.replicas=1"
  #    - "offsets.topic.replication.factor=1"
  
  services:
    mds:
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
      provider:
        type: ldap
        ldap:
          address: ldap://ldap.confluent.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: credential
          configurations:
            groupNameAttribute: cn
            groupObjectClass: posixGroup
            groupMemberAttribute: memberUid
            groupMemberAttributePattern: cn=(.*),ou=users,dc=test,dc=com
            groupSearchBase: ou=groups,dc=test,dc=com
            groupSearchScope: 2
            userNameAttribute: cn
            #userMemberOfAttributePattern: CN=(.*),DC=test,DC=com
            userObjectClass: '*'
            userSearchBase: dc=test,dc=com
            #userSearchFilter: (|(dn=cn=*,ou=users,dc=test,dc=com)(objectClass=organizationalRole))
            userSearchFilter: (|(objectClass=inetOrgPerson)(objectClass=organizationalRole))
            userSearchScope: 2
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client
    kRaftController:
      clusterRef:
        name: kcontroller
        namespace: confluent
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: ldap
          jaasConfig:
            secretRef: kafka-ldap-credentials
  dataVolumeCapacity: 10Gi
  podTemplate:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  metricReporter:
    enabled: true
    tls:
      enabled: true
    authentication:
        type: plain
        jaasConfig:
          secretRef: credential
---
Â§apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  license:
    globalLicense: true
  image:
    application: confluentinc/cp-enterprise-control-center:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  tls:
    secretRef: controlcenter-tls
    #secretRef: tls-group
  authorization:
    type: rbac
  dataVolumeCapacity: 10Gi
  #configOverrides:
  #  server:
  #    - confluent.controlcenter.command.topic.replication=1
  #    - confluent.controlcenter.replication.factor=1
  #    - confluent.metrics.reporter.topic.replicas=1
  #    - confluent.metrics.topic.replication=1
  #    - confluent.monitoring.interceptor.topic.replication=1
  #    - confluent.controlcenter.internal.topics.replication=1
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: ncapelle-playground.confluent.io
  podTemplate:
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: c3-mds-client
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      tls:
        enabled: true
    ksqldb:
    - name: ksql-dev
      url: https://ksqldb.confluent.svc.cluster.local:8088
      tls:
        enabled: true
    connect:
    - name: connect-dev
      url:  https://connect.confluent.svc.cluster.local:8083
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  license:
    globalLicense: true
  image:
    application: confluentinc/cp-schema-registry:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  enableSchemaExporter:
    true
  tls:
    secretRef: schemaregistry-tls
    #secretRef: tls-group
  authorization:
    type: rbac
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: sr-mds-client
      tls:
        enabled: true
  podTemplate:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: confluent
spec:
  kafkaRest:
    authentication:
      type: bearer
      bearer:
        secretRef: rest-credential