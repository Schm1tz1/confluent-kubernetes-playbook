---
apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-zookeeper:7.2.0
    init: confluentinc/confluent-init-container:2.4.0
  license:
    globalLicense: true
  podTemplate:
    annotations:
      ad.datadoghq.com/zookeeper.check_names: '["cp_k8s"]'
      ad.datadoghq.com/zookeeper.init_configs: '[{"is_jmx": true, "collect_default_metrics": true}]'
      ad.datadoghq.com/zookeeper.instances: '[{"host": "%%host%%","port":"7203", "name":"zookeeper", "max_returned_metrics":1000}]'
  dataVolumeCapacity: 1Gi
  logVolumeCapacity: 1Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server:7.2.0
    init: confluentinc/confluent-init-container:2.4.0
  license:
    globalLicense: true
  podTemplate:
    annotations:
      ad.datadoghq.com/kafka.check_names: '["cp_k8s"]'
      ad.datadoghq.com/kafka.init_configs: '[{"is_jmx": true, "collect_default_metrics": true}]'
      ad.datadoghq.com/kafka.instances: '[{"host": "%%host%%","port":"7203", "name":"kafka", "max_returned_metrics":1000}]'
  dataVolumeCapacity: 1Gi
  metricReporter:
    enabled: true
  configOverrides:
    server:
      - offsets.topic.replication.factor=1
      - transaction.state.log.replication.factor=1
      - confluent.license.topic.replication.factor=1
      - confluent.metadata.topic.replication.factor=1
      - confluent.balancer.topic.replication.factor=1
      - confluent.metrics.reporter.topic.replicas=1
      - confluent.security.event.logger.exporter.kafka.topic.replicas=1
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  internalTopicReplicationFactor: 1
  image:
    application: confluentinc/cp-server-connect:7.2.0
    init: confluentinc/confluent-init-container:2.4.0
  build:
    type: onDemand
    onDemand:
      plugins:
        locationType: confluentHub
        confluentHub:
          - name: kafka-connect-datagen
            owner: confluentinc
            version: 0.5.2
  license:
    globalLicense: true
  podTemplate:
    annotations:
      ad.datadoghq.com/connect.check_names: '["cp_k8s"]'
      ad.datadoghq.com/connect.init_configs: '[{"is_jmx": true, "collect_default_metrics": true}]'
      ad.datadoghq.com/connect.instances: '[{"host": "%%host%%","port":"7203", "name":"connect", "max_returned_metrics":1000}]'
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-ksqldb-server:7.2.0
    init: confluentinc/confluent-init-container:2.4.0
  license:
    globalLicense: true
  podTemplate:
    annotations:
      ad.datadoghq.com/ksqldb.check_names: '["cp_k8s"]'
      ad.datadoghq.com/ksqldb.init_configs: '[{"is_jmx": true, "collect_default_metrics": true}]'
      ad.datadoghq.com/ksqldb.instances: '[{"host": "%%host%%","port":"7203", "name":"ksqldb", "max_returned_metrics":1000}]'
  dataVolumeCapacity: 1Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  internalTopicReplicatorFactor: 1
  image:
    application: confluentinc/cp-enterprise-control-center:7.2.0
    init: confluentinc/confluent-init-container:2.4.0
  license:
    globalLicense: true
  podTemplate:
    annotations:
      ad.datadoghq.com/controlcenter.check_names: '["cp_k8s"]'
      ad.datadoghq.com/controlcenter.init_configs: '[{"is_jmx": true, "collect_default_metrics": true}]'
      ad.datadoghq.com/controlcenter.instances: '[{"host": "%%host%%","port":"7203", "name":"controlcenter", "max_returned_metrics":1000}]'
  dataVolumeCapacity: 1Gi
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
    ksqldb:
    - name: ksqldb
      url: http://ksqldb.confluent.svc.cluster.local:8088
    connect:
    - name: connect
      url: http://connect.confluent.svc.cluster.local:8083
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  enableSchemaExporter: true
  image:
    application: confluentinc/cp-schema-registry:7.2.0
    init: confluentinc/confluent-init-container:2.4.0
  license:
    globalLicense: true
  podTemplate:
    annotations:
      ad.datadoghq.com/schemaregistry.check_names: '["cp_k8s"]'
      ad.datadoghq.com/schemaregistry.init_configs: '[{"is_jmx": true, "collect_default_metrics": true}]'
      ad.datadoghq.com/schemaregistry.instances: '[{"host": "%%host%%","port":"7203", "name":"schemaregistry", "max_returned_metrics":1000}]'
